name: Main CI

env:
  DOCKER_USER: rossmaclean
  PROJECT_NAME: blog
  CLOUDRON_SERVER: my.rossmac.co.uk
  APP_DOMAIN: blog.rossmac.co.uk
  DOCKERFILE_PATH: build/Dockerfile

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_push_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker login --username ${{ env.DOCKER_USER }} --password ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build -f ${{ env.DOCKERFILE_PATH }} -t ${{ env.DOCKER_USER }}/${{ env.PROJECT_NAME }}:${GITHUB_SHA::7} -t ${{ env.DOCKER_USER }}/${{ env.PROJECT_NAME }}:latest .
      - run: docker push ${{ env.DOCKER_USER }}/${{ env.PROJECT_NAME }}:${GITHUB_SHA::7}

  deploy:
    needs: build_push_image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: npm i -g cloudron
  #     Below is commented out as there is no way to log in with a token/server which must be done before this step
  #      - name: Set Environment Variables
  #        run: cloudron env set --app faker.rossmac.co.uk ENV=prod MONGO_PASSWORD=${{ secrets.MONGO_PROD_PASSWORD }}
      - run: cloudron update --server ${{ env.CLOUDRON_SERVER }} --token ${{ secrets.CLOUDRON_TOKEN }} --app ${{ env.APP_DOMAIN }} --image ${{ env.DOCKER_USER }}/${{ env.PROJECT_NAME }}:${GITHUB_SHA::7}